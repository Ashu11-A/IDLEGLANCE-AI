// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id   Int    @id @unique @default(autoincrement())
  uuid String @unique @default(uuid())

  name     String
  username String
  email    String
  password String
  Player   Player?
}

model Player {
  id   Int    @id @unique @default(autoincrement())
  uuid String @unique @default(uuid())

  video     Video  @relation(fields: [videoUUID], references: [uuid])
  videoUUID String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  time  Int     @default(0)
  like  Boolean @default(false)
  views Int     @default(0)
}

model SimilarThumbnails {
  id   Int    @id @unique @default(autoincrement())
  uuid String @unique @default(uuid())

  videos Video[]
}

model Keywords {
  id    Int     @id @unique @default(autoincrement())
  uuid  String  @unique @default(uuid())
  name  String  @unique
  Video Video[]
}

model Language {
  id     Int     @id @unique @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   String  @unique // [ 'en-Us' ]
  videos Video[]
}

model Animes {
  id     Int     @id @unique @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   String
  videos Video[]
}

model Characters {
  id     Int     @id @unique @default(autoincrement())
  uuid   String  @unique @default(uuid())
  name   String
  videos Video[]
}

model Video {
  id                 Int                @id @unique @default(autoincrement())
  uuid               String             @unique @default(uuid())
  youtubeId          String             @unique
  // Informações gerais do vídeo
  title              String
  description        String
  lengthSeconds      Int
  isFamilySafe       Boolean
  category           String
  publishDate        DateTime
  createDate         DateTime           @default(now())
  thumbnail          String?
  keywords           Keywords[]
  // Detalhes técnicos
  maxQuality         String? // Ex: 1920x1080
  language           Language[]
  subtitle           String?
  subtitleSource     String?
  // Música do vídeo
  musicAuthor        String?
  musicStyle         String?
  // Edição do vídeo
  videoEditor        String?
  editStyle          String?
  // Animações
  animes             Animes[]
  characters         Characters[]
  isAnime            Boolean?           @default(true)
  // Vídeos relacionados
  similarThumbnailId Int?
  player             Player[]
  SimilarThumbnails  SimilarThumbnails? @relation(fields: [similarThumbnailId], references: [id])
}
