export interface InternalPlayerType {
    addCueRange: Function;
    clearVideo: Function;
    cuePlaylist: Function;
    cueVideoById: Function;
    cueVideoByUrl: Function;
    getApiInterface: Function;
    getAvailablePlaybackRates: Function;
    getAvailableQualityLevels: Function;
    getCurrentTime: Function;
    getDebugText: Function;
    getDuration: Function;
    getMediaReferenceTime: Function;
    getPlaybackQuality: Function;
    getPlaybackRate: Function;
    getPlayerMode: Function;
    getPlayerState: Function;
    getPlaylist: Function;
    getPlaylistId: Function;
    getPlaylistIndex: Function;
    getSize: Function;
    getSphericalProperties: Function;
    getVideoBytesLoaded: Function;
    getVideoBytesTotal: Function;
    getVideoData: Function;
    getVideoLoadedFraction: Function;
    getVideoStartBytes: Function;
    getVideoUrl: Function;
    getVolume: Function;
    hideVideoInfo: Function;
    id: number;
    isMuted: Function;
    mute: Function;
    unMute: Function;
    mutedAutoplay: Function;
    isVideoInfoVisible: Function;
    loadModule: Function;
    unloadModule: Function;
    loadPlaylist: Function;
    loadVideoById: Function;
    loadVideoByUrl: Function;
    logImaAdEvent: Function;
    nextVideo: Function;
    pauseVideo: Function;
    playVideo: Function;
    playVideoAt: Function;
    playerInfo: { apiInterface: string[]; videoBytesLoaded: number; videoBytesTotal: number; /* ...other properties */ };
    preloadVideoById: Function;
    previousVideo: Function;
    removeCueRange: Function;
    removeEventListener: Function;
    seekTo: Function;
    setFauxFullscreen: Function;
    setLoop: Function;
    setOption: Function;
    setPlaybackQuality: Function;
    setPlaybackRate: Function;
    setShuffle: Function;
    setSphericalProperties: Function;
    setVolume: Function;
    length: number;
    name: string;
    videoTitle: string;
}